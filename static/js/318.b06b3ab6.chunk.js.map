{"version":3,"file":"static/js/318.b06b3ab6.chunk.js","mappings":"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","sources":["components/BaseMapWithoutBaselayers.js","../node_modules/react-leaflet/lib/ImageOverlay.js","pages/OtherDataPage.js","../node_modules/react-leaflet/lib/WMSTileLayer.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { TileLayer, GeoJSON, LayersControl, FeatureGroup, ScaleControl, useMap, useMapEvents } from 'react-leaflet'\nimport { FaHome } from \"react-icons/fa\";\n\n\n\n\n\nconst BaseMapWithoutBaselayers = () => {\n  const [mousePosition, setMousePosition] = useState({ lat: 0, lng: 0 });\n\n  const map = useMap();\n\n  const HandleMouseHover = () => {\n\n\n    useMapEvents({\n      mousemove: (e) => {\n        setMousePosition(e.latlng);\n      },\n    });\n    return null;\n  };\n\n\n\n\n  const handleZoomToCenter = () => {\n    map.setView([34, 67], 6);\n\n  };\n\n\n\n\n  return (\n    <>\n\n      <HandleMouseHover />\n\n      <div\n        className='coordinates_container' >\n        Lat: {mousePosition.lat.toFixed(4)}, Long:{\" \"}\n        {mousePosition.lng.toFixed(4)}\n      </div>\n      <button className='zoom_btn' onClick={handleZoomToCenter}><FaHome /></button>\n      <ScaleControl />\n\n\n\n\n    </>\n  )\n}\n\nexport default BaseMapWithoutBaselayers","import { createElementObject, createLayerComponent, extendContext, updateMediaOverlay } from '@react-leaflet/core';\nimport { LatLngBounds, ImageOverlay as LeafletImageOverlay } from 'leaflet';\nexport const ImageOverlay = createLayerComponent(function createImageOveraly({ bounds , url , ...options }, ctx) {\n    const overlay = new LeafletImageOverlay(url, bounds, options);\n    return createElementObject(overlay, extendContext(ctx, {\n        overlayContainer: overlay\n    }));\n}, function updateImageOverlay(overlay, props, prevProps) {\n    updateMediaOverlay(overlay, props, prevProps);\n    if (props.bounds !== prevProps.bounds) {\n        const bounds = props.bounds instanceof LatLngBounds ? props.bounds : new LatLngBounds(props.bounds);\n        overlay.setBounds(bounds);\n    }\n    if (props.url !== prevProps.url) {\n        overlay.setUrl(props.url);\n    }\n});\n","import React, { useState } from \"react\";\nimport BaseMap from \"../components/BaseMap\";\nimport {\n    MapContainer,\n    GeoJSON,\n    ImageOverlay,\n    WMSTileLayer,\n    TileLayer,\n} from \"react-leaflet\";\nimport * as L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-fullscreen/dist/Leaflet.fullscreen.js\";\nimport \"leaflet-fullscreen/dist/leaflet.fullscreen.css\";\nimport {\n    MonthsArray,\n    SelectedFeaturesAverageStats,\n    YearsArray,\n    fillDensityColor,\n    getAnnualDataFromMonthly,\n    renderTimeOptions,\n    setDragging,\n    setInitialMapZoom,\n} from \"../helpers/functions\";\nimport AfghanistanCountry from \"../assets/data/shapefiles/AFG_boundary.json\";\n\nimport irrigated_rainfed_cropland_area from \"../assets/raster_data/irrigated_rainfed_cropland_area.png\";\nimport irrigated_rainfed_cropland_area_legend from \"../assets/raster_data/irrigated_rainfed_cropland_area_legend.jpg\";\nimport global_glacier_legend from \"../assets/raster_data/global_glacier_legend.jpg\"\nimport BaseMapWithoutBaselayers from \"../components/BaseMapWithoutBaselayers\";\n\n\nconst OtherDataPage = () => {\n    const [selectedDataType, setSelectedDataType] = useState(\n        \"land_classification\"\n    );\n    const [intervalType, setIntervalType] = useState(\"Yearly\");\n\n    const handleSelectedDataChange = (e) => {\n        setSelectedDataType(e.target.value);\n    };\n\n    const handleIntervalTypeChange = (e) => {\n        setIntervalType(e.target.value);\n    };\n\n    return (\n        <div className=\"dasboard_page_container\">\n            <div className=\"main_dashboard\">\n                {/* <div className=\"left_panel_equal\">\n                    <div className=\"card_container\">\n                        <div className=\"defination_container\">\n                            <h4>Temperature</h4>\n                        </div>\n                    </div>\n                </div> */}\n\n                <div className=\"right_panel_equal\" style={{width:\"100vw\"}}>\n                    <div className=\"card_container\" style={{ height: \"100%\" }}>\n                        <MapContainer\n                            fullscreenControl={true}\n                            center={[34, 67]}\n                            style={{\n                                width: \"100%\",\n                                height: \"100%\",\n                                backgroundColor: \"white\",\n                                border: \"none\",\n                                margin: \"auto\",\n                            }}\n                            zoom={setInitialMapZoom()}\n                            maxBounds={[\n                                [23, 49],\n                                [41, 82],\n                            ]}\n                            // maxZoom={8}\n                            // minZoom={setInitialMapZoom()}\n                            keyboard={false}\n                            dragging={setDragging()}\n                            // attributionControl={false}\n                            // scrollWheelZoom={false}\n                            doubleClickZoom={false}\n                        >\n                            <BaseMapWithoutBaselayers />\n\n                            <div className=\"map_options_container\" style={{ top: \"20px\" }}>\n                                <select\n                                    className=\"m-1\"\n                                    value={selectedDataType}\n                                    onChange={handleSelectedDataChange}\n                                >\n                                    <option value=\"land_classification\">\n                                        Land Classification\n                                    </option>\n                                    <option value=\"populationd_density\">\n                                        Population Density\n                                    </option>\n                                    <option value=\"global_reservoirs\">\n                                        Global Reservoirs\n                                    </option>\n                                    <option value=\"global_dams\">\n                                     Dams\n                                    </option>\n                                    <option value=\"observed_climatec_change\">\n                                        Observed Climate Change\n                                    </option>\n                                    <option value=\"climate_change_vulnerability_scenarios\">\n                                        Climate Change Vulnerability\n                                    </option>\n                                    <option value=\"Crop_Climate_Maize_Rice\">\n                                        Crop Climate: Maize, Rice, and Wheat\n                                    </option>\n                                    <option value=\"global_glacier\"> Glacier</option>\n                                    <option value=\"surface_water\"> Surface Water</option>\n\n                                </select>\n\n                                {/* <select className='m-1' value={intervalType} onChange={handleIntervalTypeChange}>\n                                    <option value=\"Monthly\">Monthly</option>\n                                    <option value=\"Yearly\">Yearly</option>\n                                </select> */}\n                            </div>\n\n                            {selectedDataType === \"land_classification\" ? (\n                                <>\n                                    <div className='map_heading'>\n                                        <h4>Land Classification</h4>\n                                    </div>\n\n                                    <div className=\"legend-panel\" style={{ width: \"180px\" }}>\n                                        <img\n                                            src={irrigated_rainfed_cropland_area_legend}\n                                            alt=\"worldcover_Legend\"\n                                        />\n                                    </div>\n                                    <TileLayer\n                                        attribution=\"Tiles &copy; Esri\"\n                                        url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n                                    />\n\n                                    <ImageOverlay\n                                        url={irrigated_rainfed_cropland_area}\n                                        fitBounds={true}\n                                        bounds={[\n                                            [29.3615722669444459, 74.8941268930555566],\n                                            [38.4904111230555586, 60.5048675530555542],\n                                        ]}\n                                        opacity={1}\n                                    />\n                                </>\n                            ) : selectedDataType === \"populationd_density\" ? (\n                                <>\n                                    <div className='map_heading'>\n                                        <h4>Population Density</h4>\n                                    </div>\n                                    <WMSTileLayer\n                                        zIndex={10}\n                                        attribution=\"Population Density\"\n                                        url=\"https://sedac.ciesin.columbia.edu/geoserver/wms\"\n                                        params={{ LAYERS: \"gpw-v4:gpw-v4-population-density_2015\" }}\n                                        // maxZoom={6}\n                                        version=\"1.1.1\"\n                                        // transparent={true}\n                                        format=\"image/png\"\n                                        opacity={1}\n                                    />\n                                    <div className=\"legend-panel\" style={{ width: \"180px\" }}>\n                                        <img\n                                            src=\"https://sedac.ciesin.columbia.edu/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&LAYER=gpw-v4:gpw-v4-population-density_2015\"\n                                            alt=\"worldcover_Legend\"\n                                        />\n                                    </div>\n                                </>\n                            ) : selectedDataType === \"global_dams\" ? (\n                                <>\n                                    <div className='map_heading'>\n                                        <h4>Dams Database</h4>\n                                    </div>\n                                    <WMSTileLayer\n                                        zIndex={10}\n                                        attribution=\"Global Dams Database\"\n                                        url=\"https://sedac.ciesin.columbia.edu/geoserver/wms\"\n                                        params={{ LAYERS: \"grand-v1:grand-v1-dams-rev01\" }}\n                                        // maxZoom={6}\n                                        version=\"1.1.1\"\n                                        // transparent={true}\n                                        format=\"image/png\"\n                                        opacity={1}\n                                    />\n                                    <div className=\"legend-panel\" style={{ width: \"180px\" }}>\n                                        <img\n                                            src=\"https://sedac.ciesin.columbia.edu/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&LAYER=grand-v1:grand-v1-dams-rev01\"\n                                            alt=\"worldcover_Legend\"\n                                        />\n                                    </div>\n                                </>\n                            ) : selectedDataType === \"observed_climatec_change\" ? (\n                                <>\n                                    <div className='map_heading'>\n                                        <h4>Observed Climate Change Impacts</h4>\n                                    </div>\n                                    <WMSTileLayer\n                                        zIndex={10}\n                                        attribution=\"Observed Climate Change Impacts\"\n                                        url=\"https://sedac.ciesin.columbia.edu/geoserver/wms\"\n                                        params={{\n                                            LAYERS: \"ipcc:ipcc-ar4-observed-climate-impacts\",\n                                        }}\n                                        // maxZoom={6}\n                                        version=\"1.1.1\"\n                                        // transparent={true}\n                                        format=\"image/png\"\n                                        opacity={1}\n                                    />\n                                    <div className=\"legend-panel\" style={{ width: \"180px\" }}>\n                                        <img\n                                            src=\"https://sedac.ciesin.columbia.edu/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&LAYER=ipcc:ipcc-ar4-observed-climate-impacts\"\n                                            alt=\"worldcover_Legend\"\n                                        />\n                                    </div>\n                                </>\n                            ) : selectedDataType ===\n                                \"climate_change_vulnerability_scenarios\" ? (\n                                <>\n                                    <div className='map_heading'>\n                                        <h4>Climate Change Vulnerability Scenarios 2005, 2050, 2100</h4>\n                                    </div>\n                                    <WMSTileLayer\n                                        zIndex={10}\n                                        attribution=\"Climate Change Vulnerability Scenarios 2005, 2050, 2100\"\n                                        url=\"https://sedac.ciesin.columbia.edu/geoserver/wms\"\n                                        params={{\n                                            LAYERS:\n                                                \"ipcc:ipcc-synthetic-vulnerability-climate-2005-2050-2100\",\n                                        }}\n                                        // maxZoom={6}\n                                        version=\"1.1.1\"\n                                        // transparent={true}\n                                        format=\"image/png\"\n                                        opacity={1}\n                                    />\n                                    <div className=\"legend-panel\" style={{ width: \"180px\" }}>\n                                        <img\n                                            src=\"https://sedac.ciesin.columbia.edu/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&LAYER=ipcc:ipcc-synthetic-vulnerability-climate-2005-2050-2100\"\n                                            alt=\"worldcover_Legend\"\n                                        />\n                                    </div>\n                                </>\n                            ) : selectedDataType === \"global_reservoirs\" ? (\n                                <>\n                                    <div className='map_heading'>\n                                        <h4>Reservoirs Database</h4>\n                                    </div>\n                                    <WMSTileLayer\n                                        zIndex={10}\n                                        attribution=\"Global Reservoirs Database\"\n                                        url=\"https://sedac.ciesin.columbia.edu/geoserver/wms\"\n                                        params={{ LAYERS: \"grand-v1:grand-v1-reservoirs-rev01\" }}\n                                        // maxZoom={6}\n                                        version=\"1.1.1\"\n                                        // transparent={true}\n                                        format=\"image/png\"\n                                        opacity={1}\n                                    />\n                                    <div className=\"legend-panel\" style={{ width: \"50px\" }}>\n                                        <img\n                                            src=\"https://sedac.ciesin.columbia.edu/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&LAYER=grand-v1:grand-v1-reservoirs-rev01\"\n                                            alt=\"worldcover_Legend\"\n                                        />\n                                    </div>\n                                </>\n                            ) : selectedDataType === \"Crop_Climate_Maize_Rice\" ? (\n                                <>\n                                    <div className='map_heading'>\n                                        <h4>Crop Climate: Maize, Rice, and Wheat</h4>\n                                    </div>\n                                    <WMSTileLayer\n                                        zIndex={10}\n                                        attribution=\"Crop Climate: Maize, Rice, and Wheat\"\n                                        url=\"https://sedac.ciesin.columbia.edu/geoserver/wms\"\n                                        params={{\n                                            LAYERS:\n                                                \"crop-climate:crop-climate-effects-climate-global-food-production\",\n                                        }}\n                                        // maxZoom={6}\n                                        version=\"1.1.1\"\n                                        // transparent={true}\n                                        format=\"image/png\"\n                                        opacity={1}\n                                    />\n                                    <div className=\"legend-panel\" style={{ width: \"180px\" }}>\n                                        <img\n                                            src=\"https://sedac.ciesin.columbia.edu/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&LAYER=crop-climate:crop-climate-effects-climate-global-food-production\"\n                                            alt=\"worldcover_Legend\"\n                                        />\n                                    </div>\n                                </>\n                            ) : selectedDataType === \"global_glacier\" ? (\n                                <>\n                                    <div className='map_heading'>\n                                        <h4>Glacier Database</h4>\n                                    </div>\n                                    <WMSTileLayer\n                                        zIndex={10}\n                                        attribution=\"Global Glacier Database\"\n                                        url=\"https://www.glims.org/geoserver/ows\"\n                                        params={{ LAYERS: \"GLIMS_GLACIERS\" }}\n                                        // maxZoom={6}\n                                        version=\"1.3.0\"\n                                        // transparent={true}\n                                        // format=\"image/png\"\n                                        opacity={1}\n                                    />\n                                    <div className='legend-panel' style={{ width: \"220px\" }}>\n                                        <img src={global_glacier_legend} alt='worldcover_Legend' />\n                                    </div>\n                                </>\n                            ) : selectedDataType === \"surface_water\" ? (\n                                <>\n                                    <div className='map_heading'>\n                                        <h4>Surface Water</h4>\n                                    </div>\n                                    <TileLayer\n                                        attribution=\"2016 EC JRC/Google\"\n                                        url=\"https://storage.googleapis.com/global-surface-water/tiles2021/transitions/{z}/{x}/{y}.png\"\n\n                                    />\n                                    {/* <div className='legend-panel' style={{ width: \"220px\" }}>\n                                        <img src={global_glacier_legend} alt='worldcover_Legend' />\n                                    </div> */}\n                                </>\n                            )\n                                : (\n                                    <>\n                                        <TileLayer\n                                            attribution=\"Tiles &copy; Esri\"\n                                            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n                                        />\n                                    </>\n                                )}\n\n\n\n\n                            {/* <TileLayer\n        url=\"https://storage.googleapis.com/global-surface-water/tiles2021/transitions/{z}/{x}/{y}.png\"\n        format=\"image/png\"\n        maxZoom={13}\n        errorTileUrl=\"https://storage.googleapis.com/global-surface-water/downloads_ancillary/blank.png\"\n        attribution=\"2016 EC JRC/Google\"\n      />\n */}\n\n\n                            <GeoJSON\n                                style={{\n                                    fillColor: \"black\",\n                                    weight: 2,\n                                    color: \"black\",\n                                    fillOpacity: \"0.001\",\n                                    interactive: false,\n                                }}\n                                data={AfghanistanCountry.features}\n                            // onEachFeature={DistrictOnEachfeature}\n                            />\n\n\n                        </MapContainer>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default OtherDataPage;\n","import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer } from 'leaflet';\nexport const WMSTileLayer = createTileLayerComponent(function createWMSTileLayer({ eventHandlers: _eh , params ={} , url , ...options }, context) {\n    const layer = new TileLayer.WMS(url, {\n        ...params,\n        ...withPane(options, context)\n    });\n    return createElementObject(layer, context);\n}, function updateWMSTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    if (props.params != null && props.params !== prevProps.params) {\n        layer.setParams(props.params);\n    }\n});\n"],"names":["BaseMapWithoutBaselayers","mousePosition","setMousePosition","useState","lat","lng","map","useMap","HandleMouseHover","useMapEvents","mousemove","e","latlng","_jsxs","_Fragment","children","_jsx","className","toFixed","onClick","handleZoomToCenter","setView","FaHome","ScaleControl","ImageOverlay","createLayerComponent","_ref","ctx","bounds","url","options","overlay","LeafletImageOverlay","createElementObject","extendContext","overlayContainer","props","prevProps","updateMediaOverlay","LatLngBounds","setBounds","setUrl","OtherDataPage","selectedDataType","setSelectedDataType","intervalType","setIntervalType","style","width","height","MapContainer","fullscreenControl","center","backgroundColor","border","margin","zoom","setInitialMapZoom","maxBounds","keyboard","dragging","setDragging","doubleClickZoom","top","value","onChange","target","src","irrigated_rainfed_cropland_area_legend","alt","TileLayer","attribution","irrigated_rainfed_cropland_area","fitBounds","opacity","WMSTileLayer","zIndex","params","LAYERS","version","format","global_glacier_legend","GeoJSON","fillColor","weight","color","fillOpacity","interactive","data","AfghanistanCountry","createTileLayerComponent","context","eventHandlers","_eh","layer","WMS","withPane","updateGridLayer","setParams"],"sourceRoot":""}