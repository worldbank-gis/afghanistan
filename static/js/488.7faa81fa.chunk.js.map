{"version":3,"file":"static/js/488.7faa81fa.chunk.js","mappings":";0EAMA,IAA0BA,EAS1BC,KAT0BD,EAS1B,WACA,OAAgB,WACT,IAAIE,EAAoB,CAE/B,eACeC,EAAEC,EAAAC,GAEjB,aAGA,IAACC,EAASD,EAAO,MACjBE,EAAA,CACA,+FACC,mBAAe,oDAChB,+CACC,MAAK,wBACL,oCACD,yCACA,kIACA,2BACA,UAAM,+OACL,sBAAiB,oBAClB,iBAAO,eACL,4CACF,4CACC,sBAAwB,oBACzB,0CACA,0CACC,qBAAgB,mBACf,sBAAoB,oBACtB,qBAAqB,mBACrB,qBAAe,mBACf,sBAAqB,oBACrB,qBAAmB,mBACnB,sBAAK,oBACL,iBAAG,mCACD,oDACF,aAAM,+NACJ,qCAAW,4LACX,yCAAiB,aACjB,mBAAU,qIACZ,iBAAgB,wHAChB,qBAAI,6BACF,kHACF,sCACC,qCAAW,gEACX,qFACD,4TACA,oFACA,4LACA,uBAAyB,ihBACxB,mBAAkB,uQACnB,oJACC,0BAAyB,mDAE1B,IAAE,IAAAC,KAAAD,EAAA,CACF,IAAAE,EAAAD,EAAAE,QAAA,WAAAA,QAAA,gCAAAA,QAAA,yBACAJ,EAAAK,aAAAF,EAAAF,EAAAC,GACA,CAEA,EAEK,MAAM,SACGI,EAAIR,EAA0BC,GAE5C,aAGAO,EAAGC,QAAAR,EAAA,MAEI,EAEL,eACFO,EAAAR,EAAAC,GAEA,aAGAO,EAAAC,QAAAR,EAAA,MAEA,EAEA,MAAgB,SAATO,EAAaR,EAAAC,GAEpB,aAGAO,EAAEC,QAAWR,EAAA,MAEb,EAEA,eACcO,EAASR,EAAAC,GAEvB,aAGAO,EAAEC,QAASR,EAAA,MAET,EAEA,MAAO,SACGO,EAAAR,EAA0BC,GAEtC,aAGAO,EAAOC,QAAER,EAAA,MAEN,EAEH,eACcO,EAAKR,EAA+BC,GAElD,aAGAO,EAAOC,QAAMR,EAAY,MAElB,EAED,KAAI,SACKO,EAAAR,EAAaC,GAE5B,aAGAO,EAAEC,QAAcR,EAAA,MAET,EAEP,eACAO,EAAAR,EAAAC,GAEA,aAGAO,EAAOC,QAAQR,EAAM,MAEnB,EAEA,KAAM,SACNO,EAAAR,EAAAC,GAEF,aAGAO,EAAOC,QAACR,EAAyB,MAE1B,EAEL,eACaO,EAAER,EAAAC,GAEjB,aAGAO,EAAOC,QAASR,EAAiB,MAEjC,EAEE,KAAM,SACOO,EAASR,EAAOC,GAE/B,aAGAO,EAAAC,QAAAR,EAAA,MAEG,EAED,eACFO,EAAAR,EAAAC,GAEA,aAGAO,EAAEC,QAAaR,EAAsB,MAErC,EAEE,MAAM,SACNO,EAAAR,EAAAC,GAEF,aAGAO,EAAGC,QAAaR,EAAiB,MAE9B,EAEH,MAAO,SACSO,EAAGR,EAAiBC,GAEpC,aAGAO,EAAMC,QAASR,EAAO,MAEtB,EAEM,MAAG,SACGO,EAAMR,EAAUC,GAE5B,aAGAO,EAAOC,QAASR,EAAE,MAEZ,EAEH,MAAK,SACMO,EAASR,EAAeC,GAEtC,aAGAO,EAAOC,QAAOR,EAAqB,MAE5B,EAEF,MAAK,SACMO,EAAQR,EAA0BC,GAElD,aAGAO,EAAKC,QAAKR,EAAY,MAEf,EAEF,eACLO,EAAAR,EAAAC,GAEA,aAGAO,EAAOC,QAAOR,EAAsB,MAEpC,EAAe,aAAKO,EAAAR,EAAAC,GACpB,aAGAO,EAAMC,QAASR,EAAa,MAEtB,EAED,eACLO,EAAAR,EAAAC,GAEA,aAGAO,EAAMC,QAASR,EAAsB,MAE/B,EAEF,eACJO,EAAAR,EAAAC,GAEA,aAGAO,EAAOC,QAAER,EAAkB,MAE3B,EAEI,MAAK,SACLO,EAAAR,EAAAC,GAEJ,aAGAO,EAAAC,QAAAR,EAAA,MAEC,EAED,eACAO,EAAAR,EAAAC,kCAGO,EAED,eACQO,EAAAR,EAAAC,GAEd,eAEUQ,QAAAR,EAAA,MACH,EAEP,eACgBO,EAAIR,EAAQC,GAE5B,aACAO,EAAIC,QAASR,EAAW,MAElB,EAEH,eACIO,EAAOR,EAAaC,GAE3B,aAGA,IAAAS,EAAAT,EAAA,OACAS,EAAAC,SAAA,CAEAV,EAAgB,OAAUA,EAAY,OAAAA,EAAA,KAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAEtCA,EAAkB,OAAUA,EAAgB,OAAMA,EAAgB,OAAAA,EAAA,OAElEA,EAAmB,SACnBO,EAAMC,QAASC,CAET,EAEL,KAAO,SACPF,EAAAR,EAAAC,GAED,aAGAO,EAAOC,QAAUR,EAAmB,MAE9B,EAEN,eACWO,EAAAR,EAAAC,GAEX,aAGAO,EAAAC,QAAiBR,EAAa,KAEzB,EAEA,KAAK,SACMO,EAACR,EAAAC,GAEjB,aAGAO,EAAMC,QAAUR,EAAQ,KAElB,EAEA,eACUO,EAAAR,EAAAC,GAEhB,aAGAO,EAAAC,QAAAR,EAAA,MAEM,EAEA,MAAG,SACOO,EAACR,EAAAC,GAEjB,aAGAO,EAAEC,QAAAR,EAAA,MAEI,EAEA,MAAG,SACOO,EAAQR,EAAOC,GAE/B,aAGAO,EAAAC,QAAAR,EAAA,MAEA,EAEM,MAAI,SACJO,EAAAR,EAAAC,GAEN,6o/8GA3XgB,IARhBO,EAAUC,QAAWb,iCCCrB,IAAIgB,EAAuBC,EAAQ,MAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CN,EAAOC,QAAU,WACf,SAASQ,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWX,EAAf,CAIA,IAAIY,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPN,CAQF,CAEA,SAASG,IACP,OAAOV,CACT,CAHAA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,OAAQd,EACRe,KAAMf,EACNgB,KAAMhB,EACNiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EACRoB,OAAQpB,EAERqB,IAAKrB,EACLsB,QAASZ,EACTa,QAASvB,EACTwB,YAAaxB,EACbyB,WAAYf,EACZgB,KAAM1B,EACN2B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAeqB,UAAYrB,EAEpBA,CACT,kBC/CErB,EAAOC,QAAUI,EAAQ,KAARA,0BCNnBL,EAAOC,QAFoB,6WC6CZ,SAA8BC,GAAQ,IAC7CyC,EAD6C,SAAAC,0RAAAC,CAAAF,EAAAC,GAAA,IAAAE,wlBAAAC,CAAAJ,GAEjD,SAAAA,EAAYjC,GAAO,IAAAsC,EAAA,mGAAAC,CAAA,KAAAN,IACjBK,EAAAF,EAAAI,KAAA,KAAMxC,IAEDyC,EAAIC,QAAQC,UACjBL,EAAKM,cAAgB,KACrBN,EAAKO,SAAW,CAAC,EAEjBP,EAAKQ,iBAAmBR,EAAKQ,iBAAiBC,KAAtBC,EAAAV,IACxBA,EAAKW,kBAAoBX,EAAKW,kBAAkBF,KAAvBC,EAAAV,IACzBA,EAAKY,mBAAqBZ,EAAKY,mBAAmBH,KAAxBC,EAAAV,IAC1BA,EAAKa,OAASb,EAAKa,OAAOJ,KAAZC,EAAAV,IACdA,EAAKc,aAAed,EAAKc,aAAaL,KAAlBC,EAAAV,IACpBA,EAAKe,eAAiBf,EAAKe,eAAeN,KAApBC,EAAAV,IACtBA,EAAKgB,aAAehB,EAAKgB,aAAaP,KAAlBC,EAAAV,IAbHA,CAclB,CAhBgD,wGAAAiB,CAAAtB,EAAA,EAAAuB,IAAA,eAAAC,MAkBjD,SAAaC,EAA2BC,EAAwBC,GAA0B,IAAAC,EAAA,KACxFC,KAAKrB,EAAIqB,KAAKrB,EACXsB,MAAK,WACJ,IAAIF,EAAKG,WAAT,CAGA,IAAKH,EAAKI,GACR,MAAM,IAAI1D,MAAM,6BAGlB,OAAOf,EAAO0E,MAAML,EAAKI,GAAI,CAC3BE,KAAMN,EAAK7D,MAAMmE,KACjBC,OAAQP,EAAK7D,MAAMoE,OACnBC,OAAQR,EAAK7D,MAAMqE,OACnBC,OAAQT,EAAK7D,MAAMsE,QATpB,CAWF,IACAP,MAAK,WACAF,EAAKG,aAGTH,EAAKf,iBAAiBY,GACtBG,EAAKZ,oBACLY,EAAKR,eAAeM,GAChBC,GACFC,EAAKX,qBAER,IA1BM,OA2BA,SAAC5C,GACFuD,EAAK7D,MAAMuE,SACbV,EAAK7D,MAAMuE,QAAQjE,EAEtB,GACJ,GAnDgD,CAAAkD,IAAA,oBAAAC,MAqDjD,WACEK,KAAKE,YAAa,EAElBF,KAAKR,cAAa,EAAMQ,KAAK9D,MAAMwE,eAAe,EACnD,GAzDgD,CAAAhB,IAAA,qBAAAC,MA2DjD,SAAmBgB,GACjBX,KAAKE,YAAa,EAGlB,IAAMU,EACJD,EAAUH,QAAUG,EAAUH,OAAOK,OAASF,EAAUH,OAAOK,OAAS,EACpEC,EACJd,KAAK9D,MAAMsE,QAAUR,KAAK9D,MAAMsE,OAAOK,OAASb,KAAK9D,MAAMsE,OAAOK,OAAS,EAEvEE,IACJJ,EAAUL,SAAWN,KAAK9D,MAAMoE,QAChCK,EAAUN,OAASL,KAAK9D,MAAMmE,MAC9BM,EAAUJ,SAAWP,KAAK9D,MAAMqE,QAChCO,IAAkBF,GAEdI,OAAyC,IAAvBL,EAAUM,SAC5BC,EAAkBP,EAAUM,WAAajB,KAAK9D,MAAM+E,UAErDF,GAAmBC,KAAoBA,GAAoBE,KAIhElB,KAAKR,cAAa,EAAOQ,KAAK9D,MAAMiF,UAAU,EAC/C,GAlFgD,CAAAzB,IAAA,uBAAAC,MAoFjD,WACEK,KAAKE,YAAa,EAElBF,KAAKT,eAAeS,KAAK9D,MAAMkF,SAE3BpB,KAAKlB,eAAiBuC,IACxBC,OAAOC,oBAAoB,SAAUvB,KAAKlB,eAC1CkB,KAAKlB,cAAgB,MAGvBkB,KAAKwB,qBAEL9F,EAAO+F,MAAMzB,KAAKG,GACnB,GAjGgD,CAAAT,IAAA,qBAAAC,MAmGjD,WAAqB,IAAA+B,EAAA,KACd1B,KAAKG,IAAOH,KAAKG,GAAGwB,gBAIzBC,EAAaC,SAAQ,SAACC,GACpBJ,EAAKvB,GAAG4B,GAAGD,EAAaJ,EAAKpC,aAC9B,GACF,GA3GgD,CAAAI,IAAA,qBAAAC,MA6GjD,WAAqB,IAAAqC,EAAA,KACdhC,KAAKG,IAAOH,KAAKG,GAAGwB,gBAIzBC,EAAaC,SAAQ,SAACC,GACpBE,EAAK7B,GAAGwB,eAAeG,EAAaE,EAAK1C,aAC1C,GACF,GArHgD,CAAAI,IAAA,eAAAC,MAuHjD,WACEK,KAAKT,eAAeS,KAAK9D,MAAMiF,SAChC,GAzHgD,CAAAzB,IAAA,iBAAAC,MA2HjD,SAAesC,GACb,GAAwB,oBAAbA,EAAyB,CAClC,IAAAC,EAAuBlC,KAAKG,GAG5B8B,EADe,CAAC5B,KAFhB6B,EAAO7B,KAEeC,OAFtB4B,EAAa5B,OAEiBE,OADfR,KAAKG,GAAGgC,gBAAkBnC,KAAKG,GAAGgC,gBAAgBC,QAAU,MAE1DpC,KAAKG,GACvB,CACF,GAlIgD,CAAAT,IAAA,mBAAAC,MAoIjD,SAAiB0C,GAAQ,IAAAC,EAAA,KAClBjB,IAIDrB,KAAK9D,MAAMqG,mBAAqBvC,KAAKlB,eACvCkB,KAAKlB,cAAgB,kBAAMpD,EAAO8G,MAAMC,OAAOH,EAAKnC,GAA/B,EACrBmB,OAAOoB,iBAAiB,SAAU1C,KAAKlB,eACnCuD,GACFrC,KAAKlB,kBAEGkB,KAAK9D,MAAMqG,kBAAoBvC,KAAKlB,gBAC9CwC,OAAOC,oBAAoB,SAAUvB,KAAKlB,eAC1CkB,KAAKlB,cAAgB,MAExB,GAnJgD,CAAAY,IAAA,SAAAC,MAqJjD,SAAOQ,GACLH,KAAKG,GAAKA,EAENH,KAAK9D,MAAMyG,OAAStB,IACtBC,OAAOsB,GAAK5C,KAAKG,GAEpB,GA3JgD,CAAAT,IAAA,oBAAAC,MA8JjD,WAAoB,IAAAkD,EAAA,KAClBC,EAAWjB,SAAQ,SAACkB,GAClB,IAAMC,EAAOH,EAAK3G,MAAM,KAAO6G,GACzBE,EAAUJ,EAAK9D,SAASgE,GACxBG,EAAaC,QAAQF,GAEvBD,IAASE,EACXL,EAAKO,gBAAgBL,EAAWC,IACtBA,GAAQE,EAElBL,EAAKQ,mBAAmBN,GACfC,GAAQE,GAAcF,IAASC,IAExCJ,EAAKQ,mBAAmBN,GACxBF,EAAKO,gBAAgBL,EAAWC,GAEnC,GACF,GA/KgD,CAAAtD,IAAA,kBAAAC,MAiLjD,SAAgBoD,EAAWC,GACzBhD,KAAKjB,SAASgE,GAAaC,EAC3BhD,KAAKG,GAAG4B,GAAG/B,KAAKsD,mBAAmBP,GAAY/C,KAAKjB,SAASgE,GAC9D,GApLgD,CAAArD,IAAA,qBAAAC,MAsLjD,SAAmBoD,GACjB/C,KAAKG,GAAGwB,eAAe3B,KAAKsD,mBAAmBP,GAAY/C,KAAKjB,SAASgE,WAClE/C,KAAKjB,SAASgE,EACtB,GAzLgD,CAAArD,IAAA,qBAAAC,MA2LjD,SAAmBoD,GACjB,MAAO,UAAYA,EAAUQ,aAC9B,GA7LgD,CAAA7D,IAAA,SAAAC,MA+LjD,WACE,OACE6D,EAAA,QAAAC,cAAA,OACEC,GAAI1D,KAAK9D,MAAMyH,MACfC,MAAO5D,KAAK9D,MAAM0H,MAClBC,IAAK7D,KAAKX,OACVyE,UAAW9D,KAAK9D,MAAM4H,WAG3B,KAxMgD3F,CAAA,EACrBqF,EAAAO,WAsO9B,OA5BA5F,EAAgB6F,UAAY,CAC1B3D,KAAM4D,EAAA,QAAU1G,QAAQ0G,EAAA,QAAU9G,QAClCoD,OAAQ0D,EAAA,QAAU9G,OAClBmD,OAAQ2D,EAAA,QAAU9G,OAClBqD,OAAQyD,EAAA,QAAU1G,QAAQ0G,EAAA,QAAU9G,QACpC8D,SAAUgD,EAAA,QAAU/G,OACpBwD,cAAeuD,EAAA,QAAUhH,KACzBmE,QAAS6C,EAAA,QAAUhH,KACnBwD,QAASwD,EAAA,QAAUhH,KACnBkE,SAAU8C,EAAA,QAAUhH,KACpB0F,MAAOsB,EAAA,QAAUjH,KACjB4G,MAAOK,EAAA,QAAU9G,OACjB2G,UAAWG,EAAA,QAAU7G,OACrBmF,iBAAkB0B,EAAA,QAAUjH,KAC5B2G,MAAOM,EAAA,QAAU7G,QAGnB0F,EAAWjB,SAAQ,SAACkB,GAClB5E,EAAgB6F,UAAU,KAAOjB,GAAakB,EAAA,QAAUhH,IACzD,IAEDkB,EAAgB+F,aAAe,CAC7BvB,OAAO,EACPJ,kBAAkB,EAClBlC,KAAM,GACNuD,MAAO,CAACO,SAAU,WAAYC,QAAS,iBAGlCjG,CACR,EA9RD,MAAAqF,4bAAAa,CAAAxI,EAAA,OACAoI,KAAApI,EAAA,ssBAKA,IAAMiH,EAAa,CACjB,cACA,YACA,WACA,iBACA,uBACA,WACA,eACA,cACA,gBACA,QACA,kBACA,WACA,cACA,YACA,QACA,cACA,oBACA,WACA,cACA,UACA,SACA,WACA,YACA,eACA,YACA,cACA,gBACA,gBACA,wBACA,UACA,oBAGIlB,EAAe,CACnB,iBACA,gBACA,kBACA,qBACA,qBACA,kBACA,wBAKIP,EAA8B,qBAAXC,8CCpDzB,IAAAgD,EAAAC,EAAA1I,EAAA,OACA2I,EAAAD,EAAA1I,EAAA,0DAEA,OAAsB,EAAAyI,EAAA,SAAqBE,EAAA,yGCA3C,MAAMC,EAAgB,CAClB,UACA,aACA,cACA,YACA,aACA,WACA,eAEJ,SAASC,EAASC,EAAKC,GACnB,MAAQ,CAACA,GAAOC,KAAQC,GAAWH,EACnC,OAAOG,CACX,CAsBA,SAASC,EAAc7I,EAAO8I,GAC1B,MAAOC,IAAYC,EAAAA,EAAAA,UAAShJ,EAAMQ,OAC3ByI,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,OAC/CG,EAAAA,EAAAA,qBAAoBL,GAAc,IAAIG,GAAa,CAC/CA,IAEJ,MAAMG,GAAUC,EAAAA,EAAAA,MAEVC,GAAaC,EAAAA,EAAAA,UAAQ,SAChBH,EACHV,KAAMK,KACN,CACJK,IAkBJ,OAhBAI,EAAAA,EAAAA,YAAU,KACNN,EApCR,SAAoB1I,EAAMR,EAAOoJ,GAAS,IAAAK,EACtC,IAAqC,IAAjClB,EAAcmB,QAAQlJ,GACtB,MAAM,IAAID,MAAM,6EAADoJ,OAA8EnJ,IAEjG,GAAiC,MAA7B4I,EAAQQ,IAAIC,QAAQrJ,GACpB,MAAM,IAAID,MAAM,yCAADoJ,OAA0CnJ,IAE7D,MAAMsJ,EAA2B,QAAbL,EAAGzJ,EAAM0I,YAAI,IAAAe,EAAAA,EAAIL,EAAQV,KACvCqB,EAAaD,EAAiBV,EAAQQ,IAAIC,QAAQC,QAAkBE,EACpE1I,EAAU8H,EAAQQ,IAAIK,WAAWzJ,EAAMuJ,GAU7C,OATuB,MAAnB/J,EAAM4H,YACNsC,EAAAA,EAAAA,IAAa5I,EAAStB,EAAM4H,WAEb,MAAf5H,EAAM0H,OACNyC,OAAOC,KAAKpK,EAAM0H,OAAO/B,SAASnC,IAE9BlC,EAAQoG,MAAMlE,GAAOxD,EAAM0H,MAAMlE,EAAI,IAGtClC,CACX,CAgBuB2I,CAAWlB,EAAU/I,EAAOoJ,IACpC,WAA6B,IAAAiB,EAChC,MAAM3B,EAAOU,EAAQQ,IAAIC,QAAQd,GAC7B,OAAJL,QAAI,IAAJA,GAAY,QAAR2B,EAAJ3B,EAAM4B,cAAM,IAAAD,GAAZA,EAAA7H,KAAAkG,GAE0B,MAAtBU,EAAQQ,IAAIW,SAEZnB,EAAQQ,IAAIW,OAAS/B,EAASY,EAAQQ,IAAIW,OAAQxB,GAElDK,EAAQQ,IAAIY,eAAiBhC,EAC7BY,EAAQQ,IAAIY,eAAgBzB,GAEpC,IAED,IACsB,MAAlB/I,EAAMyK,UAAmC,MAAfxB,GAAoCyB,EAAAA,EAAAA,cAA2BC,EAAAA,cAAoBC,EAAAA,GAAiB,CACjInH,MAAO6F,GACRtJ,EAAMyK,UAAWxB,GAAe,IACvC,CACO,MAAM4B,GAAqBC,EAAAA,EAAAA,YAAWjC","sources":["../../../../../home/solarch/plotly/webgl/plotly.js/node_modules/regl-splom/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/src/factory.js","../node_modules/src/react-plotly.js","../node_modules/react-leaflet/lib/Pane.js"],"sourcesContent":["'use strict'\n\n\nconst createScatter = require('regl-scatter2d')\nconst pick = require('pick-by-alias')\nconst getBounds = require('array-bounds')\nconst raf = require('raf')\nconst arrRange = require('array-range')\nconst rect = require('parse-rect')\nconst flatten = require('flatten-vertex-data')\n\n\nmodule.exports = SPLOM\n\n\n// @constructor\nfunction SPLOM (regl, options) {\n\tif (!(this instanceof SPLOM)) return new SPLOM(regl, options)\n\n\t// render passes\n\tthis.traces = []\n\n\t// passes for scatter, combined across traces\n\tthis.passes = {}\n\n\tthis.regl = regl\n\n\t// main scatter drawing instance\n\tthis.scatter = createScatter(regl)\n\n\tthis.canvas = this.scatter.canvas\n}\n\n\n// update & draw passes once per frame\nSPLOM.prototype.render = function (...args) {\n\tif (args.length) {\n\t\tthis.update(...args)\n\t}\n\n\tif (this.regl.attributes.preserveDrawingBuffer) return this.draw()\n\n\t// make sure draw is not called more often than once a frame\n\tif (this.dirty) {\n\t\tif (this.planned == null) {\n\t\t\tthis.planned = raf(() => {\n\t\t\t\tthis.draw()\n\t\t\t\tthis.dirty = true\n\t\t\t\tthis.planned = null\n\t\t\t})\n\t\t}\n\t}\n\telse {\n\t\tthis.draw()\n\t\tthis.dirty = true\n\t\traf(() => {\n\t\t\tthis.dirty = false\n\t\t})\n\t}\n\n\treturn this\n}\n\n\n// update passes\nSPLOM.prototype.update = function (...args) {\n\tif (!args.length) return\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tthis.updateItem(i, args[i])\n\t}\n\n\t// remove nulled passes\n\tthis.traces = this.traces.filter(Boolean)\n\n\t// FIXME: update passes independently\n\tlet passes = []\n\tlet offset = 0\n\tfor (let i = 0; i < this.traces.length; i++) {\n\t\tlet trace = this.traces[i]\n\t\tlet tracePasses = this.traces[i].passes\n\t\tfor (let j = 0; j < tracePasses.length; j++) {\n\t\t\tpasses.push(this.passes[tracePasses[j]])\n\t\t}\n\t\t// save offset of passes\n\t\ttrace.passOffset = offset\n\t\toffset += trace.passes.length\n\t}\n\n\tthis.scatter.update(...passes)\n\n\treturn this\n}\n\n\n// update trace by index, not supposed to be called directly\nSPLOM.prototype.updateItem = function (i, options) {\n\tlet { regl } = this\n\n\t// remove pass if null\n\tif (options === null) {\n\t\tthis.traces[i] = null\n\t\treturn this\n\t}\n\n\tif (!options) return this\n\n\tlet o = pick(options, {\n\t\tdata: 'data items columns rows values dimensions samples x',\n\t\tsnap: 'snap cluster',\n\t\tsize: 'sizes size radius',\n\t\tcolor: 'colors color fill fill-color fillColor',\n\t\topacity: 'opacity alpha transparency opaque',\n\t\tborderSize: 'borderSizes borderSize border-size bordersize borderWidth borderWidths border-width borderwidth stroke-width strokeWidth strokewidth outline',\n\t\tborderColor: 'borderColors borderColor bordercolor stroke stroke-color strokeColor',\n\t\tmarker: 'markers marker shape',\n\t\trange: 'range ranges databox dataBox',\n\t\tviewport: 'viewport viewBox viewbox',\n\t\tdomain: 'domain domains area areas',\n\t\tpadding: 'pad padding paddings pads margin margins',\n\t\ttranspose: 'transpose transposed',\n\t\tdiagonal: 'diagonal diag showDiagonal',\n\t\tupper: 'upper up top upperhalf upperHalf showupperhalf showUpper showUpperHalf',\n\t\tlower: 'lower low bottom lowerhalf lowerHalf showlowerhalf showLowerHalf showLower'\n\t})\n\n\t// we provide regl buffer per-trace, since trace data can be changed\n\tlet trace = (this.traces[i] || (this.traces[i] = {\n\t\tid: i,\n\t\tbuffer: regl.buffer({\n\t\t\tusage: 'dynamic',\n\t\t\ttype: 'float',\n\t\t\tdata: new Uint8Array()\n\t\t}),\n\t\tcolor: 'black',\n\t\tmarker: null,\n\t\tsize: 12,\n\t\tborderColor: 'transparent',\n\t\tborderSize: 1,\n\t\tviewport:  rect([regl._gl.drawingBufferWidth, regl._gl.drawingBufferHeight]),\n\t\tpadding: [0, 0, 0, 0],\n\t\topacity: 1,\n\t\tdiagonal: true,\n\t\tupper: true,\n\t\tlower: true\n\t}))\n\n\n\t// save styles\n\tif (o.color != null) {\n\t\ttrace.color = o.color\n\t}\n\tif (o.size != null) {\n\t\ttrace.size = o.size\n\t}\n\tif (o.marker != null) {\n\t\ttrace.marker = o.marker\n\t}\n\tif (o.borderColor != null) {\n\t\ttrace.borderColor = o.borderColor\n\t}\n\tif (o.borderSize != null) {\n\t\ttrace.borderSize = o.borderSize\n\t}\n\tif (o.opacity != null) {\n\t\ttrace.opacity = o.opacity\n\t}\n\tif (o.viewport) {\n\t\ttrace.viewport = rect(o.viewport)\n\t}\n\tif (o.diagonal != null) trace.diagonal = o.diagonal\n\tif (o.upper != null) trace.upper = o.upper\n\tif (o.lower != null) trace.lower = o.lower\n\n\t// put flattened data into buffer\n\tif (o.data) {\n\t\ttrace.buffer(flatten(o.data))\n\t\ttrace.columns = o.data.length\n\t\ttrace.count = o.data[0].length\n\n\t\t// detect bounds per-column\n\t\ttrace.bounds = []\n\n\t\tfor (let i = 0; i < trace.columns; i++) {\n\t\t\ttrace.bounds[i] = getBounds(o.data[i], 1)\n\t\t}\n\t}\n\n\t// add proper range updating markers\n\tlet multirange\n\tif (o.range) {\n\t\ttrace.range = o.range\n\t\tmultirange = trace.range && typeof trace.range[0] !== 'number'\n\t}\n\n\tif (o.domain) {\n\t\ttrace.domain = o.domain\n\t}\n\tlet multipadding = false\n\tif (o.padding != null) {\n\t\t// multiple paddings\n\t\tif (Array.isArray(o.padding) && o.padding.length === trace.columns && typeof o.padding[o.padding.length - 1] === 'number') {\n\t\t\ttrace.padding = o.padding.map(getPad)\n\t\t\tmultipadding = true\n\t\t}\n\t\t// single padding\n\t\telse {\n\t\t\ttrace.padding = getPad(o.padding)\n\t\t}\n\t}\n\n\t// create passes\n\tlet m = trace.columns\n\tlet n = trace.count\n\n\tlet w = trace.viewport.width\n\tlet h = trace.viewport.height\n\tlet left = trace.viewport.x\n\tlet top = trace.viewport.y\n\tlet iw = w / m\n\tlet ih = h / m\n\n\ttrace.passes = []\n\n\tfor (let i = 0; i < m; i++) {\n\t\tfor (let j = 0; j < m; j++) {\n\t\t\tif (!trace.diagonal && j === i) continue\n\t\t\tif (!trace.upper && i > j) continue\n\t\t\tif (!trace.lower && i < j) continue\n\n\t\t\tlet key = passId(trace.id, i, j)\n\n\t\t\tlet pass = this.passes[key] || (this.passes[key] = {})\n\n\t\t\tif (o.data) {\n\t\t\t\tif (o.transpose) {\n\t\t\t\t\tpass.positions = {\n\t\t\t\t\t\tx: {buffer: trace.buffer, offset: j, count: n, stride: m},\n\t\t\t\t\t\ty: {buffer: trace.buffer, offset: i, count: n, stride: m}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpass.positions = {\n\t\t\t\t\t\tx: {buffer: trace.buffer, offset: j * n, count: n},\n\t\t\t\t\t\ty: {buffer: trace.buffer, offset: i * n, count: n}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpass.bounds = getBox(trace.bounds, i, j)\n\t\t\t}\n\n\t\t\tif (o.domain || o.viewport || o.data) {\n\t\t\t\tlet pad = multipadding ? getBox(trace.padding, i, j) : trace.padding\n\t\t\t\tif (trace.domain) {\n\t\t\t\t\tlet [lox, loy, hix, hiy] = getBox(trace.domain, i, j)\n\n\t\t\t\t\tpass.viewport = [\n\t\t\t\t\t\tleft + lox * w + pad[0],\n\t\t\t\t\t\ttop + loy * h + pad[1],\n\t\t\t\t\t\tleft + hix * w - pad[2],\n\t\t\t\t\t\ttop + hiy * h - pad[3]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t// consider auto-domain equipartial\n\t\t\t\telse {\n\t\t\t\t\tpass.viewport = [\n\t\t\t\t\t\tleft + j * iw + iw * pad[0],\n\t\t\t\t\t\ttop + i * ih + ih * pad[1],\n\t\t\t\t\t\tleft + (j + 1) * iw - iw * pad[2],\n\t\t\t\t\t\ttop + (i + 1) * ih - ih * pad[3]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (o.color) pass.color = trace.color\n\t\t\tif (o.size) pass.size = trace.size\n\t\t\tif (o.marker) pass.marker = trace.marker\n\t\t\tif (o.borderSize) pass.borderSize = trace.borderSize\n\t\t\tif (o.borderColor) pass.borderColor = trace.borderColor\n\t\t\tif (o.opacity) pass.opacity = trace.opacity\n\n\t\t\tif (o.range) {\n\t\t\t\tpass.range = multirange ? getBox(trace.range, i, j) : trace.range || pass.bounds\n\t\t\t}\n\n\t\t\ttrace.passes.push(key)\n\t\t}\n\t}\n\n\treturn this\n}\n\n\n// draw all or passed passes\nSPLOM.prototype.draw = function (...args) {\n\tif (!args.length) {\n\t\tthis.scatter.draw()\n\t}\n\telse {\n\t\tlet idx = []\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t// draw(0, 2, 5) - draw traces\n\t\t\tif (typeof args[i] === 'number' ) {\n\t\t\t\tlet { passes, passOffset } = this.traces[args[i]]\n\t\t\t\tidx.push(...arrRange(passOffset, passOffset + passes.length))\n\t\t\t}\n\t\t\t// draw([0, 1, 2 ...], [3, 4, 5]) - draw points\n\t\t\telse if (args[i].length) {\n\t\t\t\tlet els = args[i]\n\t\t\t\tlet { passes, passOffset } = this.traces[i]\n\t\t\t\tpasses = passes.map((passId, i) => {\n\t\t\t\t\tidx[passOffset + i] = els\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tthis.scatter.draw(...idx)\n\t}\n\n\treturn this\n}\n\n\n// dispose resources\nSPLOM.prototype.destroy = function () {\n\tthis.traces.forEach(trace => {\n\t\tif (trace.buffer && trace.buffer.destroy) trace.buffer.destroy()\n\t})\n\tthis.traces = null\n\tthis.passes = null\n\n\tthis.scatter.destroy()\n\n\treturn this\n}\n\n\n// return pass corresponding to trace i- j- square\nfunction passId (trace, i, j) {\n\tlet id = (trace.id != null ? trace.id : trace)\n\tlet n = i\n\tlet m = j\n\tlet key = id << 16 | (n & 0xff) << 8 | m & 0xff\n\n\treturn key\n}\n\n\n// return bounding box corresponding to a pass\nfunction getBox (items, i, j) {\n\tlet ilox, iloy, ihix, ihiy, jlox, jloy, jhix, jhiy\n\tlet iitem = items[i], jitem = items[j]\n\n\tif (iitem.length > 2) {\n\t\tilox = iitem[0]\n\t\tihix = iitem[2]\n\t\tiloy = iitem[1]\n\t\tihiy = iitem[3]\n\t}\n\telse if (iitem.length) {\n\t\tilox = iloy = iitem[0]\n\t\tihix = ihiy = iitem[1]\n\t}\n\telse {\n\t\tilox = iitem.x\n\t\tiloy = iitem.y\n\t\tihix = iitem.x + iitem.width\n\t\tihiy = iitem.y + iitem.height\n\t}\n\n\tif (jitem.length > 2) {\n\t\tjlox = jitem[0]\n\t\tjhix = jitem[2]\n\t\tjloy = jitem[1]\n\t\tjhiy = jitem[3]\n\t}\n\telse if (jitem.length) {\n\t\tjlox = jloy = jitem[0]\n\t\tjhix = jhiy = jitem[1]\n\t}\n\telse {\n\t\tjlox = jitem.x\n\t\tjloy = jitem.y\n\t\tjhix = jitem.x + jitem.width\n\t\tjhiy = jitem.y + jitem.height\n\t}\n\n\treturn [ jlox, iloy, jhix, ihiy ]\n}\n\n\nfunction getPad (arg) {\n\tif (typeof arg === 'number') return [arg, arg, arg, arg]\n\telse if (arg.length === 2) return [arg[0], arg[1], arg[0], arg[1]]\n\telse {\n\t\tlet box = rect(arg)\n\t\treturn [box.x, box.y, box.x + box.width, box.y + box.height]\n\t}\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  'AfterExport',\n  'AfterPlot',\n  'Animated',\n  'AnimatingFrame',\n  'AnimationInterrupted',\n  'AutoSize',\n  'BeforeExport',\n  'BeforeHover',\n  'ButtonClicked',\n  'Click',\n  'ClickAnnotation',\n  'Deselect',\n  'DoubleClick',\n  'Framework',\n  'Hover',\n  'LegendClick',\n  'LegendDoubleClick',\n  'Relayout',\n  'Relayouting',\n  'Restyle',\n  'Redraw',\n  'Selected',\n  'Selecting',\n  'SliderChange',\n  'SliderEnd',\n  'SliderStart',\n  'SunburstClick',\n  'Transitioning',\n  'TransitionInterrupted',\n  'Unhover',\n  'WebGlContextLost',\n];\n\nconst updateEvents = [\n  'plotly_restyle',\n  'plotly_redraw',\n  'plotly_relayout',\n  'plotly_relayouting',\n  'plotly_doubleclick',\n  'plotly_animated',\n  'plotly_sunburstclick',\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== 'undefined';\n\nexport default function plotComponentFactory(Plotly) {\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.figureCallback = this.figureCallback.bind(this);\n      this.updatePlotly = this.updatePlotly.bind(this);\n    }\n\n    updatePlotly(shouldInvokeResizeHandler, figureCallbackFunction, shouldAttachUpdateEvents) {\n      this.p = this.p\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          if (!this.el) {\n            throw new Error('Missing element reference');\n          }\n          // eslint-disable-next-line consistent-return\n          return Plotly.react(this.el, {\n            data: this.props.data,\n            layout: this.props.layout,\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          this.syncWindowResize(shouldInvokeResizeHandler);\n          this.syncEventHandlers();\n          this.figureCallback(figureCallbackFunction);\n          if (shouldAttachUpdateEvents) {\n            this.attachUpdateEvents();\n          }\n        })\n        .catch((err) => {\n          if (this.props.onError) {\n            this.props.onError(err);\n          }\n        });\n    }\n\n    componentDidMount() {\n      this.unmounting = false;\n\n      this.updatePlotly(true, this.props.onInitialized, true);\n    }\n\n    componentDidUpdate(prevProps) {\n      this.unmounting = false;\n\n      // frames *always* changes identity so fall back to check length only :(\n      const numPrevFrames =\n        prevProps.frames && prevProps.frames.length ? prevProps.frames.length : 0;\n      const numNextFrames =\n        this.props.frames && this.props.frames.length ? this.props.frames.length : 0;\n\n      const figureChanged = !(\n        prevProps.layout === this.props.layout &&\n        prevProps.data === this.props.data &&\n        prevProps.config === this.props.config &&\n        numNextFrames === numPrevFrames\n      );\n      const revisionDefined = prevProps.revision !== void 0;\n      const revisionChanged = prevProps.revision !== this.props.revision;\n\n      if (!figureChanged && (!revisionDefined || (revisionDefined && !revisionChanged))) {\n        return;\n      }\n\n      this.updatePlotly(false, this.props.onUpdate, false);\n    }\n\n    componentWillUnmount() {\n      this.unmounting = true;\n\n      this.figureCallback(this.props.onPurge);\n\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.on(updateEvent, this.handleUpdate);\n      });\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.removeListener(updateEvent, this.handleUpdate);\n      });\n    }\n\n    handleUpdate() {\n      this.figureCallback(this.props.onUpdate);\n    }\n\n    figureCallback(callback) {\n      if (typeof callback === 'function') {\n        const {data, layout} = this.el;\n        const frames = this.el._transitionData ? this.el._transitionData._frames : null;\n        const figure = {data, layout, frames};\n        callback(figure, this.el);\n      }\n    }\n\n    syncWindowResize(invoke) {\n      if (!isBrowser) {\n        return;\n      }\n\n      if (this.props.useResizeHandler && !this.resizeHandler) {\n        this.resizeHandler = () => Plotly.Plots.resize(this.el);\n        window.addEventListener('resize', this.resizeHandler);\n        if (invoke) {\n          this.resizeHandler();\n        }\n      } else if (!this.props.useResizeHandler && this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers() {\n      eventNames.forEach((eventName) => {\n        const prop = this.props['on' + eventName];\n        const handler = this.handlers[eventName];\n        const hasHandler = Boolean(handler);\n\n        if (prop && !hasHandler) {\n          this.addEventHandler(eventName, prop);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.removeEventHandler(eventName);\n        } else if (prop && hasHandler && prop !== handler) {\n          // replace the handler\n          this.removeEventHandler(eventName);\n          this.addEventHandler(eventName, prop);\n        }\n      });\n    }\n\n    addEventHandler(eventName, prop) {\n      this.handlers[eventName] = prop;\n      this.el.on(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n    }\n\n    removeEventHandler(eventName) {\n      this.el.removeListener(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n      delete this.handlers[eventName];\n    }\n\n    getPlotlyEventName(eventName) {\n      return 'plotly_' + eventName.toLowerCase();\n    }\n\n    render() {\n      return (\n        <div\n          id={this.props.divId}\n          style={this.props.style}\n          ref={this.getRef}\n          className={this.props.className}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onPurge: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    useResizeHandler: PropTypes.bool,\n    divId: PropTypes.string,\n  };\n\n  eventNames.forEach((eventName) => {\n    PlotlyComponent.propTypes['on' + eventName] = PropTypes.func;\n  });\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {position: 'relative', display: 'inline-block'},\n  };\n\n  return PlotlyComponent;\n}\n","import plotComponentFactory from './factory';\nimport Plotly from 'plotly.js/dist/plotly';\n\nconst PlotComponent = plotComponentFactory(Plotly);\n\nexport default PlotComponent;\n","import { LeafletProvider, addClassName, useLeafletContext } from '@react-leaflet/core';\nimport React, { forwardRef, useState, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nconst DEFAULT_PANES = [\n    'mapPane',\n    'markerPane',\n    'overlayPane',\n    'popupPane',\n    'shadowPane',\n    'tilePane',\n    'tooltipPane'\n];\nfunction omitPane(obj, pane) {\n    const { [pane]: _p , ...others } = obj;\n    return others;\n}\nfunction createPane(name, props, context) {\n    if (DEFAULT_PANES.indexOf(name) !== -1) {\n        throw new Error(`You must use a unique name for a pane that is not a default Leaflet pane: ${name}`);\n    }\n    if (context.map.getPane(name) != null) {\n        throw new Error(`A pane with this name already exists: ${name}`);\n    }\n    const parentPaneName = props.pane ?? context.pane;\n    const parentPane = parentPaneName ? context.map.getPane(parentPaneName) : undefined;\n    const element = context.map.createPane(name, parentPane);\n    if (props.className != null) {\n        addClassName(element, props.className);\n    }\n    if (props.style != null) {\n        Object.keys(props.style).forEach((key)=>{\n            // @ts-ignore\n            element.style[key] = props.style[key];\n        });\n    }\n    return element;\n}\nfunction PaneComponent(props, forwardedRef) {\n    const [paneName] = useState(props.name);\n    const [paneElement, setPaneElement] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>paneElement, [\n        paneElement\n    ]);\n    const context = useLeafletContext();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const newContext = useMemo(()=>({\n            ...context,\n            pane: paneName\n        }), [\n        context\n    ]);\n    useEffect(()=>{\n        setPaneElement(createPane(paneName, props, context));\n        return function removeCreatedPane() {\n            const pane = context.map.getPane(paneName);\n            pane?.remove?.();\n            // @ts-ignore map internals\n            if (context.map._panes != null) {\n                // @ts-ignore map internals\n                context.map._panes = omitPane(context.map._panes, paneName);\n                // @ts-ignore map internals\n                context.map._paneRenderers = omitPane(// @ts-ignore map internals\n                context.map._paneRenderers, paneName);\n            }\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return props.children != null && paneElement != null ? /*#__PURE__*/ createPortal(/*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: newContext\n    }, props.children), paneElement) : null;\n}\nexport const Pane = /*#__PURE__*/ forwardRef(PaneComponent);\n"],"names":["factory","self","__webpack_modules__","__unused_webpack_module","__unused_webpack_exports","__webpack_require__","Lib","rules","selector","fullSelector","replace","addStyleRule","module","exports","Plotly","register","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","PlotlyComponent","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","_assertThisInitialized","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","figureCallback","updatePlotly","_createClass","key","value","shouldInvokeResizeHandler","figureCallbackFunction","shouldAttachUpdateEvents","_this2","this","then","unmounting","el","react","data","layout","config","frames","onError","onInitialized","prevProps","numPrevFrames","length","numNextFrames","figureChanged","revisionDefined","revision","revisionChanged","onUpdate","onPurge","isBrowser","window","removeEventListener","removeUpdateEvents","purge","_this3","removeListener","updateEvents","forEach","updateEvent","on","_this4","callback","_this$el","_transitionData","_frames","invoke","_this5","useResizeHandler","Plots","resize","addEventListener","debug","gd","_this6","eventNames","eventName","prop","handler","hasHandler","Boolean","addEventHandler","removeEventHandler","getPlotlyEventName","toLowerCase","_react","createElement","id","divId","style","ref","className","Component","propTypes","_propTypes","defaultProps","position","display","_interopRequireWildcard","_factory","_interopRequireDefault","_plotly","DEFAULT_PANES","omitPane","obj","pane","_p","others","PaneComponent","forwardedRef","paneName","useState","paneElement","setPaneElement","useImperativeHandle","context","useLeafletContext","newContext","useMemo","useEffect","_props$pane","indexOf","concat","map","getPane","parentPaneName","parentPane","undefined","createPane","addClassName","Object","keys","_pane$remove","remove","_panes","_paneRenderers","children","createPortal","React","LeafletProvider","Pane","forwardRef"],"sourceRoot":""}