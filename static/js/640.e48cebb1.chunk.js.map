{"version":3,"file":"static/js/640.e48cebb1.chunk.js","mappings":"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","sources":["assets/data/ColorLegendsData.js","components/MapLegend.js","components/charts/ClimateProjectionsChart.js","pages/ClimateChangePage.js"],"sourcesContent":["export const ColorLegendsData = {\n    Yearly_PCP:{\n        Title: \"Precipitation\",\n        Unit: \"(mm/year)\",\n        Value: [350, 230, 150, 80],\n        Colors: [\"#011f4b\", \"#03396c\", \"#005b96\", \"#6497b1\",\"#b3cde0\"],\n        MaxValue: \"350\",\n        MinValue: \"80\",\n    },\n    Monthly_PCP:{\n        Title: \"Precipitation\",\n        Unit: \"(mm/month)\",\n        Value: [15, 10, 5, 1],\n        Colors: [\"#011f4b\", \"#03396c\", \"#005b96\", \"#6497b1\",\"#b3cde0\"],\n        MaxValue: \"15\",\n        MinValue: \"1\",\n    },\n    pcp_ssp585:{\n        Title: \"Precipitation\",\n        Unit: \"(mm)\",\n        Value: [200, 100, 50, 0],\n        Colors: [\"#011f4b\", \"#03396c\", \"#005b96\", \"#6497b1\",\"#b3cde0\"],\n        MaxValue: \"200\",\n        MinValue: \"0\",\n    },\n    pcp_ssp245:{\n        Title: \"Precipitation\",\n        Unit: \"(mm)\",\n        Value: [100, 80, 40, 0],\n        Colors: [\"#011f4b\", \"#03396c\", \"#005b96\", \"#6497b1\",\"#b3cde0\"],\n        MaxValue: \"100\",\n        MinValue: \"0\",\n    },\n    tdeg_ssp245:{\n        Title: \"Temperature\",\n        Unit: \"(°C)\",\n        Value: [3, 2, 1, 0],\n        Colors: [\"#A94438\",\"#D04848\", \"#F3B95F\", \"#FDE767\", \"#6895D2\"],\n        MaxValue: \"3\",\n        MinValue: \"0\",\n    },\n    tdeg_ssp585:{\n        Title: \"Temperature\",\n        Unit: \"(°C)\",\n        Value: [3, 2, 1, 0],\n        Colors: [\"#A94438\",\"#D04848\", \"#F3B95F\", \"#FDE767\", \"#6895D2\"],\n        MaxValue: \"3\",\n        MinValue: \"0\",\n    },\n\n    Yearly_AETI:{\n        Title: \"Evapotranspiration (ET)\",\n        Unit: \"(mm/year)\",\n        Value: [400, 100, 80, 20],\n        Colors: [\"#A94438\",\"#D04848\", \"#F3B95F\", \"#FDE767\", \"#6895D2\"],\n        MaxValue: \"400\",\n        MinValue: \"20\",\n    },\n    Monthly_AETI:{\n        Title: \"Evapotranspiration (ET)\",\n        Unit: \"(mm/month)\",\n        Value: [20, 6, 4, 2],\n        Colors: [\"#A94438\",\"#D04848\", \"#F3B95F\", \"#FDE767\", \"#6895D2\"],\n        MaxValue: \"20\",\n        MinValue: \"2\",\n    },\n\n    Yearly_RET:{\n        Title: \"Potential ET\",\n        Unit: \"(mm/year)\",\n        Value: [1800, 1500, 1200, 800],\n        Colors: [\"#A94438\",\"#D04848\", \"#F3B95F\", \"#FDE767\", \"#6895D2\"],\n        MaxValue: \"1800\",\n        MinValue: \"800\",\n    },\n    Monthly_RET:{\n        Title: \"Potential ET\",\n        Unit: \"(mm/month)\",\n        Value: [280, 200, 150, 50],\n        Colors: [\"#A94438\",\"#D04848\", \"#F3B95F\", \"#FDE767\", \"#6895D2\"],\n        MaxValue: \"280\",\n        MinValue: \"50\",\n    },\n    Yearly_AridityIndex:{\n        Title: \"Aridity Index\",\n        Unit: \"\",\n        Value: [80, 50, 20, 10],\n        Colors: [\"#eff24b\", \"#fcd432\", \"#fca132\",\"#f24207\", \"#802101\"],\n        MaxValue: \"80\",\n        MinValue: \"10\",\n    },\n    Monthly_AridityIndex:{\n        Title: \"Aridity Index\",\n        Unit: \"\",\n        Value: [15, 10, 5, 0.2],\n        Colors: [\"#eff24b\", \"#fcd432\", \"#fca132\",\"#f24207\", \"#802101\"],\n        MaxValue: \"15\",\n        MinValue: \"0.2\",\n    },\n    // NPP*22022\n    Yearly_NPP:{\n        Title: \"Average Biomass Production\",\n        Unit: \"(kg/ha/year)\",\n        Value: [360, 300, 200, 13],\n        Colors: [\"#416D19\",\"#9BCF53\",  \"#BFEA7C\",\"#b6ff7e\", \"#FFF67E\"],\n        MaxValue: \"8000\",\n        MinValue: \"300\",\n    },\n    Monthly_NPP:{\n        Title: \"Average Biomass Production\",\n        Unit: \"(kg/ha/month)\",\n        Value: [9, 6, 2, 0.4],\n        Colors: [\"#416D19\",\"#9BCF53\",  \"#BFEA7C\",\"#b6ff7e\", \"#FFF67E\"],\n        MaxValue: \"200\",\n        MinValue: \"10\",\n    },\n    Yearly_WaterProductivity:{\n        Title: \"Biomass Water Productivity\",\n        Unit: \"(kg/m3)\",\n        Value: [1, 0.7, 0.3, 0.01],\n        Colors: [\"#017d09\", \"#02c70f\", \"#fc8003\", \"#fc3503\",\"#ab3600\"],\n        MaxValue: \"1\",\n        MinValue: \"0.01\",\n    },\n\n\n\n    Yearly_ETB:{\n        Title: \"ET Blue\",\n        Unit: \"(mm/year)\",\n        Value: [400, 300, 100, 20],\n        Colors: [\"#011f4b\", \"#165794\", \"#0a97f2\", \"#6497b1\",\"#dcebf5\"],\n        MaxValue: \"400\",\n        MinValue: \"20\",\n    },\n    Monthly_ETB:{\n        Title: \"ET Blue\",\n        Unit: \"(mm/month)\",\n        Value: [400, 300, 100, 20],\n        Colors: [\"#011f4b\", \"#165794\", \"#0a97f2\", \"#6497b1\",\"#dcebf5\"],\n        MaxValue: \"400\",\n        MinValue: \"20\",\n    },\n    Yearly_ETG:{\n        Title: \"ET Green\",\n        Unit: \"(mm/year)\",\n        Value: [180, 120, 50, 20],\n        Colors: [\"#50623A\", \"#518556\", \"#739072\", \"#86A789\",\"#D2E3C8\"],\n        MaxValue: \"180\",\n        MinValue: \"20\",\n    },\n    Monthly_ETG:{\n        Title: \"ET Green\",\n        Unit: \"(mm/month)\",\n        Value: [180, 120, 50, 20],\n        Colors: [\"#50623A\", \"#518556\", \"#739072\", \"#86A789\",\"#D2E3C8\"],\n        MaxValue: \"180\",\n        MinValue: \"20\",\n    },\n\n\n}\n    \n","import React from 'react';\n\nconst MapLegend = ({ ColorLegendsDataItem }) => {\n    const { Title, Unit, Colors, MaxValue, MinValue } = ColorLegendsDataItem;\n    const gradientColors = Colors.join(', ');\n    const firstColor = Colors[0];\n    const lastColor = Colors[Colors.length - 1];\n\n    return (\n        <div className=\"legend_container\">\n            <div className=\"legend_heading\">\n                <p>\n                    {Title}{\" \"}\n                    {Unit}\n                </p>\n            </div>\n            <div className=\"legend-color-container\">\n            <div className='legend_left_arrow' style={{borderRight: `25px solid ${lastColor}`}}></div>\n                <div className='legend-color' style={{ backgroundImage: `linear-gradient(to left, ${gradientColors})` }}></div>\n                <div className='legend_right_arrow' style={{borderLeft: `25px solid ${firstColor}`}}></div>\n            </div>\n            <div className=\"legend-item\">\n                <p className=\"legend-num-value\">{MinValue}</p>\n                <p className=\"legend-num-value\"> {MaxValue}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default MapLegend;\n","import React from 'react'\nimport Plot from 'react-plotly.js';\n\nconst ClimateProjectionsChart = ({ xData, yData, xAxisLabel, yAxisLabel }) => {\n\n\n    return (\n        <div>\n            <Plot\n                data={[\n                    {\n                        x: xData,\n                        y: yData,\n                        type: 'bar',\n                        // marker: {\n                        //     color: color,\n                        // },\n                        marker: {\n                            color: yData.map(value => value < 0 ? 'red' : 'blue'),\n                        },\n                    },\n                ]}\n                layout={{\n                    xaxis: {\n                        title: xAxisLabel,\n                    },\n                    yaxis: {\n                        title: yAxisLabel,\n                    },\n\n                    legend: {\n                        orientation: 'h',\n                        x: 0,\n                        y: 1.2,\n                    },\n                }}\n                style={{ width: \"100%\", height: \"100%\" }}\n            />\n\n        </div>\n    )\n}\n\nexport default ClimateProjectionsChart","import React, { useState } from 'react'\nimport BaseMap from '../components/BaseMap'\nimport { MapContainer, GeoJSON, TileLayer } from 'react-leaflet'\nimport * as L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js';\nimport 'leaflet-fullscreen/dist/leaflet.fullscreen.css';\nimport { MonthsArray, SelectedFeaturesAverageClimateParaFunction, YearsArray, fillDensityColor, getAnnualDataFromMonthly, renderTimeOptions } from '../helpers/functions';\nimport { BaseMapsLayers, mapCenter, setDragging, setInitialMapZoom } from '../helpers/mapFunction';\nimport ClimateProjectionsChart from '../components/charts/ClimateProjectionsChart';\nimport { useSelectedFeatureContext } from '../contexts/SelectedFeatureContext';\nimport AFG_districts from \"../assets/data/shapefiles/AFG_districts.json\";\nimport FiltererdJsonFeature from './FiltererdJsonFeature';\nimport AfghanistanCountry from '../assets/data/shapefiles/AFG_boundary.json';\nimport MapLegend from '../components/MapLegend';\nimport { ColorLegendsData } from \"../assets/data/ColorLegendsData\";\nimport climate_change_statistics from \"../assets/data/climate_change_statistics.json\"\n\nconst ClimateChangePage = () => {\n  const [selectedDataType, setSelectedDataType] = useState('pcp_ssp585');\n  const [selectedTime, setSelectedTime] = useState(8);\n  const { selectedView, selectedFeatureName } = useSelectedFeatureContext();\n\n\n\n  const filteredFeaturesItems = selectedView && selectedFeatureName!== \"\" ? climate_change_statistics.filter(item => item[selectedView] === selectedFeatureName) : climate_change_statistics;\n  const SelectedFeaturesStatsData = SelectedFeaturesAverageClimateParaFunction(filteredFeaturesItems) \n\n\n\n\n  const [selectedBasemapLayer, setSelectedBasemapLayer] = useState(BaseMapsLayers[0]);\n\n\n  const handleBasemapSelection = (e) => {\n    const selectedItem = BaseMapsLayers.find((item) => item.name === e.target.value);\n    setSelectedBasemapLayer(selectedItem);\n\n\n  };\n\n\n\n  const handleDataLayerSelection = (e) => {\n    const value = e.target.value;\n    setSelectedDataType((prevSelectedRaster) =>\n      prevSelectedRaster === value ? '' : value\n    );\n\n  };\n\n\n  const ColorLegendsDataItem = ColorLegendsData[`${selectedDataType}`];\n\n  function DistrictOnEachfeature(feature, layer) {\n    layer.on(\"mouseover\", function (e) {\n      const DataItem = climate_change_statistics.find(\n        (item) => item.DISTRICT === feature.properties.NAME\n      );\n      const popupContent = `\n            <div>\n              District Name: ${feature.properties.NAME}<br/>\n              ${selectedDataType === 'pcp_ssp585' ? `Precipitation: ${DataItem[selectedDataType][selectedTime]} (mm)` :\n          selectedDataType === 'pcp_ssp245' ? `Precipitation: ${DataItem[selectedDataType][selectedTime]} (mm)` :\n            selectedDataType === 'tdeg_ssp585' ? `Temperature: ${DataItem[selectedDataType][selectedTime]} (°C))` :\n              selectedDataType === 'tdeg_ssp245' ? `Temperature: ${DataItem[selectedDataType][selectedTime]} (°C))` :\n                null}\n        <br/>\n            </div>\n          `;\n      layer.bindTooltip(popupContent, { sticky: true });\n      layer.openTooltip();\n    });\n\n    layer.on(\"mouseout\", function () {\n      layer.closeTooltip();\n    });\n  }\n\n  const DistrictStyle = (feature) => {\n    if (selectedTime !== \"\") {\n      const getDensityFromData = (name) => {\n        const DataItem = climate_change_statistics.find((item) => item.DISTRICT === name);\n        return DataItem[selectedDataType][selectedTime]\n      };\n      const density = getDensityFromData(feature.properties.NAME);\n      return {\n        fillColor: ColorLegendsDataItem ? fillDensityColor(ColorLegendsDataItem, density) : \"none\",\n        // fillColor: selectedTime !== '' ? Annual_Density(density) : \"none\",\n        weight: 1,\n        opacity: 1,\n        color: \"black\",\n        dashArray: \"2\",\n        fillOpacity: 1,\n      };\n    }\n  };\n\n\n  const ClimateChangeProjectionYearsArray = [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\", \"2024\", \"2025\", \"2026\", \"2027\", \"2028\", \"2029\", \"2030\", \"2031\", \"2032\", \"2033\", \"2034\", \"2035\", \"2036\", \"2037\", \"2038\", \"2039\", \"2040\", \"2041\", \"2042\", \"2043\", \"2044\", \"2045\", \"2046\", \"2047\", \"2048\", \"2049\", \"2050\", \"2051\", \"2052\", \"2053\", \"2054\", \"2055\", \"2056\", \"2057\", \"2058\", \"2059\", \"2060\", \"2061\", \"2062\", \"2063\", \"2064\", \"2065\", \"2066\", \"2067\", \"2068\", \"2069\", \"2070\", \"2071\", \"2072\", \"2073\", \"2074\", \"2075\", \"2076\", \"2077\", \"2078\", \"2079\", \"2080\", \"2081\", \"2082\", \"2083\", \"2084\", \"2085\", \"2086\", \"2087\", \"2088\", \"2089\", \"2090\", \"2091\", \"2092\", \"2093\", \"2094\", \"2095\", \"2096\", \"2097\", \"2098\", \"2099\", \"2100\"]\n\n\n\n  return (\n    <div className='dasboard_page_container'>\n      <div className='main_dashboard'>\n\n        <div className='left_panel_equal'>\n\n\n          <div className='card_container'>\n            <div className='defination_container'>\n              <h4>Precipitation</h4>\n            </div>\n            <ClimateProjectionsChart\n              xData={ClimateChangeProjectionYearsArray}\n              yData={SelectedFeaturesStatsData.pcp_ssp245}\n              xAxisLabel=\"Year\"\n              yAxisLabel=\"Precipitation under SSP 245 (mm/year)\"\n              color=\"blue\"\n            />\n\n            <ClimateProjectionsChart\n              xData={ClimateChangeProjectionYearsArray}\n              yData={SelectedFeaturesStatsData.pcp_ssp585}\n              xAxisLabel=\"Year\"\n              yAxisLabel=\"Precipitation under SSP 585 (mm/year)\"\n              color=\"blue\"\n            />\n\n          </div>\n\n          <div className='card_container'>\n            <div className='defination_container'>\n              <h4>Temperature</h4>\n            </div>\n            <ClimateProjectionsChart\n              xData={ClimateChangeProjectionYearsArray}\n              yData={SelectedFeaturesStatsData.tdeg_ssp245}\n              xAxisLabel=\"Year\"\n              yAxisLabel=\"Temperature under SSP 245 (°C)\"\n              color=\"purple\"\n            />\n            <ClimateProjectionsChart\n              xData={ClimateChangeProjectionYearsArray}\n              yData={SelectedFeaturesStatsData.tdeg_ssp585}\n              xAxisLabel=\"Year\"\n              yAxisLabel=\"Temperature under SSP 585 (°C)\"\n              color=\"purple\"\n            />\n          </div>\n\n        </div>\n\n\n        <div className='right_panel_equal' >\n          <div className='card_container' style={{ height: \"100%\" }}>\n            <MapContainer\n              fullscreenControl={true}\n              center={mapCenter}\n              style={{ width: '100%', height: \"100%\", backgroundColor: 'white', border: 'none', margin: 'auto' }}\n              zoom={setInitialMapZoom()}\n              maxBounds={[[23, 49], [41, 82]]}\n              // maxZoom={8}\n              minZoom={setInitialMapZoom()}\n              keyboard={false}\n              dragging={setDragging()}\n              // attributionControl={false}\n              // scrollWheelZoom={false}\n              doubleClickZoom={false}\n            >\n\n              <div className='map_layer_manager'>\n                <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\n                  <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\n                      <button className=\"accordion-button map_layer_collapse collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseOne\">\n                        Base Map\n                      </button>\n                    </h2>\n                    <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingOne\">\n                      <div className=\"accordion-body map_layer_collapse_body\">\n                        {BaseMapsLayers.map(option => (\n                          <div key={option.value} className=\"collapse_layers_item\">\n                            <input\n                              type=\"radio\"\n                              id={option.name}\n                              name=\"data_type\"\n                              value={option.name}\n                              checked={selectedBasemapLayer?.name === option.name}\n                              onChange={handleBasemapSelection}\n                            />\n                            <label htmlFor={option.name}>{option.name}</label>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                  {/* <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\n                      <button className=\"accordion-button map_layer_collapse collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\n                        Raster Layers\n                      </button>\n                    </h2>\n                    <div id=\"panelsStayOpen-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingTwo\">\n                      <div className=\"accordion-body map_layer_collapse_body\">\n                        <div className=\"collapse_layers_item\">\n                          <input\n                            type=\"checkbox\"\n                            id=\"avg_aeti_raster\"\n                            value=\"avg_aeti_raster\"\n                            checked={selectedRaster === 'avg_aeti_raster'}\n                            onChange={handleRasterSelectionChange}\n                          />\n                          <label htmlFor=\"avg_aeti_raster\">Avg. Annual Evapotranspiration</label>\n\n\n                        </div>\n                        <div className=\"collapse_layers_item\">\n                          <input\n                            type=\"checkbox\"\n                            id=\"avg_ret_raster\"\n                            value=\"avg_ret_raster\"\n                            checked={selectedRaster === 'avg_ret_raster'}\n                            onChange={handleRasterSelectionChange}\n                          />\n                          <label htmlFor=\"avg_ret_raster\">Avg. Annual Potential ET</label>\n\n                        </div>\n\n                      </div>\n                    </div>\n                  </div> */}\n                  <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\n                      <button className=\"accordion-button map_layer_collapse collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\n                      Climate Change Projection\n                      </button>\n                    </h2>\n                    <div id=\"panelsStayOpen-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingThree\">\n                      <div className=\"accordion-body map_layer_collapse_body\">\n\n                        <div className=\"collapse_layers_item\">\n                          <input\n                            type=\"checkbox\"\n                            id=\"pcp_ssp585\"\n                            value=\"pcp_ssp585\"\n                            checked={selectedDataType === 'pcp_ssp585'}\n                            onChange={handleDataLayerSelection}\n                          />\n                          <label htmlFor=\"pcp_ssp585\">Precipitation (ssp585)</label>\n                        </div>\n\n                        <div className=\"collapse_layers_item\">\n                          <input\n                            type=\"checkbox\"\n                            id=\"pcp_ssp245\"\n                            value=\"pcp_ssp245\"\n                            checked={selectedDataType === 'pcp_ssp245'}\n                            onChange={handleDataLayerSelection}\n                          />\n                          <label htmlFor=\"pcp_ssp245\">Precipitation (ssp245)</label>\n                        </div>\n\n                        <div className=\"collapse_layers_item\">\n                          <input\n                            type=\"checkbox\"\n                            id=\"tdeg_ssp585\"\n                            value=\"tdeg_ssp585\"\n                            checked={selectedDataType === 'tdeg_ssp585'}\n                            onChange={handleDataLayerSelection}\n                          />\n                          <label htmlFor=\"tdeg_ssp585\">Temperature (ssp585)</label>\n                        </div>\n\n                        <div className=\"collapse_layers_item\">\n                          <input\n                            type=\"checkbox\"\n                            id=\"tdeg_ssp245\"\n                            value=\"tdeg_ssp245\"\n                            checked={selectedDataType === 'tdeg_ssp245'}\n                            onChange={handleDataLayerSelection}\n                          />\n                          <label htmlFor=\"tdeg_ssp245\">Temperature (ssp245)</label>\n                        </div>\n\n\n\n\n\n\n\n                        <select value={selectedTime} onChange={(e) => setSelectedTime(e.target.value)}>\n\n                          {Array.from({ length: 86 }, (_, index) => {\n                            const year = 2015 + index;\n                            return (\n                              <option key={index} value={index}>\n                                {`${year}`}\n                              </option>\n                            );\n                          })}\n\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <TileLayer\n                key={selectedBasemapLayer.url}\n                attribution={selectedBasemapLayer.attribution}\n                url={selectedBasemapLayer.url}\n                subdomains={selectedBasemapLayer.subdomains}\n              />\n\n\n\n\n\n              {selectedDataType && selectedTime !== '' ? (\n                <>\n                  {ColorLegendsDataItem && (\n                    <MapLegend ColorLegendsDataItem={ColorLegendsDataItem} />\n                  )}\n                  <GeoJSON\n                    key={selectedDataType + selectedTime}\n                    style={DistrictStyle}\n                    data={AFG_districts.features}\n                    onEachFeature={DistrictOnEachfeature}\n                  />\n\n                </>\n\n              ) : (\n                <GeoJSON\n                  style={{\n                    fillColor: 'black',\n                    weight: 2,\n                    color: 'black',\n                    fillOpacity: \"0.001\",\n                    interactive: false\n                  }}\n                  data={AfghanistanCountry.features}\n                />\n              )}\n\n              <FiltererdJsonFeature />\n\n\n\n\n\n\n\n\n              <BaseMap />\n\n            </MapContainer>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default ClimateChangePage"],"names":["ColorLegendsData","Yearly_PCP","Title","Unit","Value","Colors","MaxValue","MinValue","Monthly_PCP","pcp_ssp585","pcp_ssp245","tdeg_ssp245","tdeg_ssp585","Yearly_AETI","Monthly_AETI","Yearly_RET","Monthly_RET","Yearly_AridityIndex","Monthly_AridityIndex","Yearly_NPP","Monthly_NPP","Yearly_WaterProductivity","Yearly_ETB","Monthly_ETB","Yearly_ETG","Monthly_ETG","_ref","ColorLegendsDataItem","gradientColors","join","firstColor","lastColor","length","_jsxs","className","children","_jsx","style","borderRight","concat","backgroundImage","borderLeft","xData","yData","xAxisLabel","yAxisLabel","Plot","data","x","y","type","marker","color","map","value","layout","xaxis","title","yaxis","legend","orientation","width","height","ClimateChangePage","selectedDataType","setSelectedDataType","useState","selectedTime","setSelectedTime","selectedView","selectedFeatureName","useSelectedFeatureContext","filteredFeaturesItems","climate_change_statistics","filter","item","SelectedFeaturesStatsData","SelectedFeaturesAverageClimateParaFunction","selectedBasemapLayer","setSelectedBasemapLayer","BaseMapsLayers","handleBasemapSelection","e","selectedItem","find","name","target","handleDataLayerSelection","prevSelectedRaster","ClimateChangeProjectionYearsArray","ClimateProjectionsChart","MapContainer","fullscreenControl","center","mapCenter","backgroundColor","border","margin","zoom","setInitialMapZoom","maxBounds","minZoom","keyboard","dragging","setDragging","doubleClickZoom","id","option","checked","onChange","htmlFor","Array","from","_","index","year","TileLayer","attribution","url","subdomains","_Fragment","MapLegend","GeoJSON","feature","density","DISTRICT","getDensityFromData","properties","NAME","fillColor","fillDensityColor","weight","opacity","dashArray","fillOpacity","AFG_districts","features","onEachFeature","layer","on","DataItem","popupContent","bindTooltip","sticky","openTooltip","closeTooltip","interactive","AfghanistanCountry","FiltererdJsonFeature","BaseMap"],"sourceRoot":""}